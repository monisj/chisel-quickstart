;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Exercise3_Lab6 : 
  module Exercise3_Lab6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : UInt<4>, clock_High : UInt<1>}
    
    reg counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h08"))) @[Exercise3_Lab6.scala 10:27]
    reg counter_2 : UInt<4>, clock with : (reset => (reset, UInt<4>("h08"))) @[Exercise3_Lab6.scala 11:28]
    io.clock_High <= UInt<1>("h00") @[Exercise3_Lab6.scala 12:18]
    node _T = eq(counter, UInt<4>("h08")) @[Exercise3_Lab6.scala 13:19]
    when _T : @[Exercise3_Lab6.scala 13:29]
      io.clock_High <= UInt<1>("h01") @[Exercise3_Lab6.scala 14:22]
      node _counter_T = sub(counter, UInt<1>("h01")) @[Exercise3_Lab6.scala 15:25]
      node _counter_T_1 = tail(_counter_T, 1) @[Exercise3_Lab6.scala 15:25]
      counter <= _counter_T_1 @[Exercise3_Lab6.scala 15:16]
      node _counter_2_T = sub(counter_2, UInt<1>("h01")) @[Exercise3_Lab6.scala 16:29]
      node _counter_2_T_1 = tail(_counter_2_T, 1) @[Exercise3_Lab6.scala 16:29]
      counter_2 <= _counter_2_T_1 @[Exercise3_Lab6.scala 16:18]
      skip @[Exercise3_Lab6.scala 13:29]
    else : @[Exercise3_Lab6.scala 17:32]
      node _T_1 = eq(counter, UInt<1>("h00")) @[Exercise3_Lab6.scala 17:24]
      when _T_1 : @[Exercise3_Lab6.scala 17:32]
        node _T_2 = eq(counter_2, UInt<1>("h00")) @[Exercise3_Lab6.scala 18:24]
        when _T_2 : @[Exercise3_Lab6.scala 18:32]
          io.clock_High <= UInt<1>("h01") @[Exercise3_Lab6.scala 19:26]
          node _counter_2_T_2 = add(counter_2, UInt<1>("h01")) @[Exercise3_Lab6.scala 20:36]
          node _counter_2_T_3 = tail(_counter_2_T_2, 1) @[Exercise3_Lab6.scala 20:36]
          counter_2 <= _counter_2_T_3 @[Exercise3_Lab6.scala 20:23]
          skip @[Exercise3_Lab6.scala 18:32]
        else : @[Exercise3_Lab6.scala 21:40]
          node _T_3 = eq(counter_2, UInt<4>("h08")) @[Exercise3_Lab6.scala 21:30]
          when _T_3 : @[Exercise3_Lab6.scala 21:40]
            io.clock_High <= UInt<1>("h01") @[Exercise3_Lab6.scala 22:26]
            counter <= UInt<4>("h08") @[Exercise3_Lab6.scala 23:20]
            skip @[Exercise3_Lab6.scala 21:40]
          else : @[Exercise3_Lab6.scala 24:20]
            io.clock_High <= UInt<1>("h00") @[Exercise3_Lab6.scala 25:26]
            node _counter_2_T_4 = add(counter_2, UInt<1>("h01")) @[Exercise3_Lab6.scala 26:33]
            node _counter_2_T_5 = tail(_counter_2_T_4, 1) @[Exercise3_Lab6.scala 26:33]
            counter_2 <= _counter_2_T_5 @[Exercise3_Lab6.scala 26:22]
            skip @[Exercise3_Lab6.scala 24:20]
        skip @[Exercise3_Lab6.scala 17:32]
      else : @[Exercise3_Lab6.scala 28:16]
        io.clock_High <= UInt<1>("h00") @[Exercise3_Lab6.scala 29:22]
        node _counter_2_T_6 = sub(counter_2, UInt<1>("h01")) @[Exercise3_Lab6.scala 30:29]
        node _counter_2_T_7 = tail(_counter_2_T_6, 1) @[Exercise3_Lab6.scala 30:29]
        counter_2 <= _counter_2_T_7 @[Exercise3_Lab6.scala 30:18]
        node _counter_T_2 = sub(counter, UInt<1>("h01")) @[Exercise3_Lab6.scala 31:25]
        node _counter_T_3 = tail(_counter_T_2, 1) @[Exercise3_Lab6.scala 31:25]
        counter <= _counter_T_3 @[Exercise3_Lab6.scala 31:16]
        skip @[Exercise3_Lab6.scala 28:16]
    
