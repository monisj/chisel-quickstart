circuit Exercise1_Lab5 :
  module Exercise1_Lab5 :
    input clock : Clock
    input reset : UInt<1>
    input io_A : SInt<32>
    input io_B : SInt<32>
    output io_x : SInt<32>
    output io_AluBranch : UInt<1>
    input io_Aluop : UInt<5>

    node _T = eq(io_Aluop, UInt<1>("h0")) @[Exercise1_Lab5.scala 21:31]
    node _io_x_T = add(io_A, io_B) @[Exercise1_Lab5.scala 22:35]
    node _io_x_T_1 = tail(_io_x_T, 1) @[Exercise1_Lab5.scala 22:35]
    node _io_x_T_2 = asSInt(_io_x_T_1) @[Exercise1_Lab5.scala 22:35]
    node _T_1 = eq(io_Aluop, UInt<4>("h9")) @[Exercise1_Lab5.scala 23:37]
    node _io_x_T_3 = mul(io_A, io_B) @[Exercise1_Lab5.scala 24:36]
    node _T_2 = eq(io_Aluop, UInt<1>("h1")) @[Exercise1_Lab5.scala 25:37]
    node sbt3 = bits(io_B, 4, 0) @[Exercise1_Lab5.scala 27:40]
    node sbt4 = dshl(io_A, sbt3) @[Exercise1_Lab5.scala 28:40]
    node _T_3 = eq(io_Aluop, UInt<5>("h1f")) @[Exercise1_Lab5.scala 31:37]
    node _T_4 = eq(io_Aluop, UInt<2>("h2")) @[Exercise1_Lab5.scala 33:37]
    node _T_5 = lt(io_A, io_B) @[Exercise1_Lab5.scala 34:35]
    node _GEN_0 = mux(_T_5, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 34:42 Exercise1_Lab5.scala 35:30 Exercise1_Lab5.scala 37:30]
    node _T_6 = eq(io_Aluop, UInt<2>("h3")) @[Exercise1_Lab5.scala 39:37]
    node _T_7 = eq(io_Aluop, UInt<5>("h16")) @[Exercise1_Lab5.scala 39:64]
    node _T_8 = or(_T_6, _T_7) @[Exercise1_Lab5.scala 39:52]
    node _T_9 = lt(io_A, io_B) @[Exercise1_Lab5.scala 42:33]
    node _GEN_1 = mux(_T_9, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 42:38 Exercise1_Lab5.scala 43:38 Exercise1_Lab5.scala 45:38]
    node _T_10 = eq(io_Aluop, UInt<3>("h4")) @[Exercise1_Lab5.scala 47:37]
    node _io_x_T_4 = xor(io_A, io_B) @[Exercise1_Lab5.scala 48:30]
    node _io_x_T_5 = asSInt(_io_x_T_4) @[Exercise1_Lab5.scala 48:30]
    node _T_11 = eq(io_Aluop, UInt<3>("h5")) @[Exercise1_Lab5.scala 49:37]
    node _T_12 = eq(io_Aluop, UInt<4>("hd")) @[Exercise1_Lab5.scala 49:64]
    node _T_13 = or(_T_11, _T_12) @[Exercise1_Lab5.scala 49:52]
    node _shift_T = bits(io_B, 4, 0) @[Exercise1_Lab5.scala 50:41]
    node shift = dshr(io_A, _shift_T) @[Exercise1_Lab5.scala 50:34]
    node _T_14 = eq(io_Aluop, UInt<3>("h6")) @[Exercise1_Lab5.scala 52:37]
    node _io_x_T_6 = or(io_A, io_B) @[Exercise1_Lab5.scala 53:38]
    node _io_x_T_7 = asSInt(_io_x_T_6) @[Exercise1_Lab5.scala 53:38]
    node _T_15 = eq(io_Aluop, UInt<3>("h7")) @[Exercise1_Lab5.scala 54:37]
    node _io_x_T_8 = and(io_A, io_B) @[Exercise1_Lab5.scala 55:38]
    node _io_x_T_9 = asSInt(_io_x_T_8) @[Exercise1_Lab5.scala 55:38]
    node _T_16 = eq(io_Aluop, UInt<4>("h8")) @[Exercise1_Lab5.scala 56:37]
    node _io_x_T_10 = sub(io_A, io_B) @[Exercise1_Lab5.scala 57:38]
    node _io_x_T_11 = tail(_io_x_T_10, 1) @[Exercise1_Lab5.scala 57:38]
    node _io_x_T_12 = asSInt(_io_x_T_11) @[Exercise1_Lab5.scala 57:38]
    node _T_17 = eq(io_Aluop, UInt<5>("h10")) @[Exercise1_Lab5.scala 58:37]
    node _T_18 = eq(io_A, io_B) @[Exercise1_Lab5.scala 59:35]
    node _GEN_2 = mux(_T_18, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 59:44 Exercise1_Lab5.scala 60:38 Exercise1_Lab5.scala 62:38]
    node _T_19 = eq(io_Aluop, UInt<5>("h11")) @[Exercise1_Lab5.scala 64:37]
    node _T_20 = eq(io_A, io_B) @[Exercise1_Lab5.scala 65:37]
    node _T_21 = not(_T_20) @[Exercise1_Lab5.scala 65:30]
    node _GEN_3 = mux(_T_21, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 65:47 Exercise1_Lab5.scala 66:38 Exercise1_Lab5.scala 68:38]
    node _T_22 = eq(io_Aluop, UInt<5>("h14")) @[Exercise1_Lab5.scala 70:37]
    node _T_23 = lt(io_A, io_B) @[Exercise1_Lab5.scala 71:35]
    node _GEN_4 = mux(_T_23, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 71:42 Exercise1_Lab5.scala 72:38 Exercise1_Lab5.scala 74:38]
    node _T_24 = eq(io_Aluop, UInt<5>("h15")) @[Exercise1_Lab5.scala 76:37]
    node _T_25 = geq(io_A, io_B) @[Exercise1_Lab5.scala 77:35]
    node _GEN_5 = mux(_T_25, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 77:43 Exercise1_Lab5.scala 78:38 Exercise1_Lab5.scala 80:38]
    node _T_26 = eq(io_Aluop, UInt<5>("h17")) @[Exercise1_Lab5.scala 82:37]
    node a3 = asUInt(io_A) @[Exercise1_Lab5.scala 83:39]
    node b3 = asUInt(io_B) @[Exercise1_Lab5.scala 84:39]
    node _T_27 = geq(a3, b3) @[Exercise1_Lab5.scala 85:33]
    node _GEN_6 = mux(_T_27, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Exercise1_Lab5.scala 85:39 Exercise1_Lab5.scala 86:38 Exercise1_Lab5.scala 88:38]
    node _GEN_7 = validif(_T_26, _GEN_6) @[Exercise1_Lab5.scala 82:52]
    node _GEN_8 = mux(_T_24, _GEN_5, _GEN_7) @[Exercise1_Lab5.scala 76:52]
    node _GEN_9 = mux(_T_22, _GEN_4, _GEN_8) @[Exercise1_Lab5.scala 70:52]
    node _GEN_10 = mux(_T_19, _GEN_3, _GEN_9) @[Exercise1_Lab5.scala 64:52]
    node _GEN_11 = mux(_T_17, _GEN_2, _GEN_10) @[Exercise1_Lab5.scala 58:52]
    node _GEN_12 = mux(_T_16, _io_x_T_12, _GEN_11) @[Exercise1_Lab5.scala 56:52 Exercise1_Lab5.scala 57:30]
    node _GEN_13 = mux(_T_15, _io_x_T_9, _GEN_12) @[Exercise1_Lab5.scala 54:52 Exercise1_Lab5.scala 55:30]
    node _GEN_14 = mux(_T_14, _io_x_T_7, _GEN_13) @[Exercise1_Lab5.scala 52:52 Exercise1_Lab5.scala 53:30]
    node _GEN_15 = mux(_T_13, shift, _GEN_14) @[Exercise1_Lab5.scala 49:80 Exercise1_Lab5.scala 51:22]
    node _GEN_16 = mux(_T_10, _io_x_T_5, _GEN_15) @[Exercise1_Lab5.scala 47:52 Exercise1_Lab5.scala 48:22]
    node _GEN_17 = mux(_T_8, _GEN_1, _GEN_16) @[Exercise1_Lab5.scala 39:79]
    node _GEN_18 = mux(_T_4, _GEN_0, _GEN_17) @[Exercise1_Lab5.scala 33:51]
    node _GEN_19 = mux(_T_3, io_A, _GEN_18) @[Exercise1_Lab5.scala 31:51 Exercise1_Lab5.scala 32:29]
    node _GEN_20 = mux(_T_2, sbt4, _GEN_19) @[Exercise1_Lab5.scala 25:51 Exercise1_Lab5.scala 30:30]
    node _GEN_21 = mux(_T_1, _io_x_T_3, _GEN_20) @[Exercise1_Lab5.scala 23:52 Exercise1_Lab5.scala 24:29]
    node _GEN_22 = mux(_T, _io_x_T_2, _GEN_21) @[Exercise1_Lab5.scala 21:46 Exercise1_Lab5.scala 22:29]
    node _T_28 = bits(io_Aluop, 4, 3) @[Exercise1_Lab5.scala 96:30]
    node _T_29 = eq(_T_28, UInt<2>("h2")) @[Exercise1_Lab5.scala 96:36]
    node _T_30 = eq(io_x, asSInt(UInt<2>("h1"))) @[Exercise1_Lab5.scala 96:56]
    node _T_31 = and(_T_29, _T_30) @[Exercise1_Lab5.scala 96:48]
    node _GEN_23 = mux(_T_31, UInt<1>("h1"), UInt<1>("h0")) @[Exercise1_Lab5.scala 96:64 Exercise1_Lab5.scala 97:30 Exercise1_Lab5.scala 99:30]
    io_x <= asSInt(bits(_GEN_22, 31, 0))
    io_AluBranch <= _GEN_23
