;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Exercise1_Lab8 : 
  module Exercise1_Lab8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip write : UInt<1>, flip addr : UInt<10>, flip mask : UInt<1>[4], flip dataIn : UInt<8>[4], dataOut : UInt<8>[4]}
    
    smem mem : UInt<8>[4][1024], undefined @[Exercise1_Lab8.scala 16:27]
    reg mask_mem : UInt[4], clock @[Exercise1_Lab8.scala 17:23]
    node bits_lo = cat(io.mask[1], io.mask[0]) @[Cat.scala 30:58]
    node bits_hi = cat(io.mask[3], io.mask[2]) @[Cat.scala 30:58]
    node bits = cat(bits_hi, bits_lo) @[Cat.scala 30:58]
    when io.write : @[Exercise1_Lab8.scala 20:19]
      node _T = eq(UInt<1>("h01"), bits) @[Conditional.scala 37:30]
      when _T : @[Conditional.scala 40:58]
        mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 23:28]
        mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 24:28]
        mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 25:28]
        mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 26:28]
        write mport MPORT = mem[io.addr], clock
        MPORT[0] <= mask_mem[0]
        MPORT[1] <= mask_mem[1]
        MPORT[2] <= mask_mem[2]
        MPORT[3] <= mask_mem[3]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_1 = eq(UInt<2>("h02"), bits) @[Conditional.scala 37:30]
        when _T_1 : @[Conditional.scala 39:67]
          mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 30:28]
          mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 31:28]
          mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 32:28]
          mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 33:28]
          write mport MPORT_1 = mem[io.addr], clock
          MPORT_1[0] <= mask_mem[0]
          MPORT_1[1] <= mask_mem[1]
          MPORT_1[2] <= mask_mem[2]
          MPORT_1[3] <= mask_mem[3]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_2 = eq(UInt<2>("h03"), bits) @[Conditional.scala 37:30]
          when _T_2 : @[Conditional.scala 39:67]
            mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 37:28]
            mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 38:28]
            mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 39:28]
            mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 40:28]
            write mport MPORT_2 = mem[io.addr], clock
            MPORT_2[0] <= mask_mem[0]
            MPORT_2[1] <= mask_mem[1]
            MPORT_2[2] <= mask_mem[2]
            MPORT_2[3] <= mask_mem[3]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_3 = eq(UInt<3>("h04"), bits) @[Conditional.scala 37:30]
            when _T_3 : @[Conditional.scala 39:67]
              mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 44:28]
              mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 45:28]
              mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 46:28]
              mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 47:28]
              write mport MPORT_3 = mem[io.addr], clock
              MPORT_3[0] <= mask_mem[0]
              MPORT_3[1] <= mask_mem[1]
              MPORT_3[2] <= mask_mem[2]
              MPORT_3[3] <= mask_mem[3]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_4 = eq(UInt<3>("h05"), bits) @[Conditional.scala 37:30]
              when _T_4 : @[Conditional.scala 39:67]
                mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 51:28]
                mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 52:28]
                mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 53:28]
                mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 54:28]
                write mport MPORT_4 = mem[io.addr], clock
                MPORT_4[0] <= mask_mem[0]
                MPORT_4[1] <= mask_mem[1]
                MPORT_4[2] <= mask_mem[2]
                MPORT_4[3] <= mask_mem[3]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_5 = eq(UInt<3>("h06"), bits) @[Conditional.scala 37:30]
                when _T_5 : @[Conditional.scala 39:67]
                  mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 58:28]
                  mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 59:28]
                  mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 60:28]
                  mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 61:28]
                  write mport MPORT_5 = mem[io.addr], clock
                  MPORT_5[0] <= mask_mem[0]
                  MPORT_5[1] <= mask_mem[1]
                  MPORT_5[2] <= mask_mem[2]
                  MPORT_5[3] <= mask_mem[3]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_6 = eq(UInt<3>("h07"), bits) @[Conditional.scala 37:30]
                  when _T_6 : @[Conditional.scala 39:67]
                    mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 65:28]
                    mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 66:28]
                    mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 67:28]
                    mask_mem[3] <= UInt<1>("h00") @[Exercise1_Lab8.scala 68:28]
                    write mport MPORT_6 = mem[io.addr], clock
                    MPORT_6[0] <= mask_mem[0]
                    MPORT_6[1] <= mask_mem[1]
                    MPORT_6[2] <= mask_mem[2]
                    MPORT_6[3] <= mask_mem[3]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_7 = eq(UInt<4>("h08"), bits) @[Conditional.scala 37:30]
                    when _T_7 : @[Conditional.scala 39:67]
                      mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 72:28]
                      mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 73:28]
                      mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 74:28]
                      mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 75:28]
                      write mport MPORT_7 = mem[io.addr], clock
                      MPORT_7[0] <= mask_mem[0]
                      MPORT_7[1] <= mask_mem[1]
                      MPORT_7[2] <= mask_mem[2]
                      MPORT_7[3] <= mask_mem[3]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_8 = eq(UInt<4>("h09"), bits) @[Conditional.scala 37:30]
                      when _T_8 : @[Conditional.scala 39:67]
                        mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 79:28]
                        mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 80:28]
                        mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 81:28]
                        mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 82:28]
                        write mport MPORT_8 = mem[io.addr], clock
                        MPORT_8[0] <= mask_mem[0]
                        MPORT_8[1] <= mask_mem[1]
                        MPORT_8[2] <= mask_mem[2]
                        MPORT_8[3] <= mask_mem[3]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_9 = eq(UInt<4>("h0a"), bits) @[Conditional.scala 37:30]
                        when _T_9 : @[Conditional.scala 39:67]
                          mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 86:28]
                          mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 87:28]
                          mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 88:28]
                          mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 89:28]
                          write mport MPORT_9 = mem[io.addr], clock
                          MPORT_9[0] <= mask_mem[0]
                          MPORT_9[1] <= mask_mem[1]
                          MPORT_9[2] <= mask_mem[2]
                          MPORT_9[3] <= mask_mem[3]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_10 = eq(UInt<4>("h0b"), bits) @[Conditional.scala 37:30]
                          when _T_10 : @[Conditional.scala 39:67]
                            mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 93:28]
                            mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 94:28]
                            mask_mem[2] <= UInt<1>("h00") @[Exercise1_Lab8.scala 95:28]
                            mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 96:28]
                            write mport MPORT_10 = mem[io.addr], clock
                            MPORT_10[0] <= mask_mem[0]
                            MPORT_10[1] <= mask_mem[1]
                            MPORT_10[2] <= mask_mem[2]
                            MPORT_10[3] <= mask_mem[3]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_11 = eq(UInt<4>("h0c"), bits) @[Conditional.scala 37:30]
                            when _T_11 : @[Conditional.scala 39:67]
                              mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 100:28]
                              mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 101:28]
                              mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 102:28]
                              mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 103:28]
                              write mport MPORT_11 = mem[io.addr], clock
                              MPORT_11[0] <= mask_mem[0]
                              MPORT_11[1] <= mask_mem[1]
                              MPORT_11[2] <= mask_mem[2]
                              MPORT_11[3] <= mask_mem[3]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_12 = eq(UInt<4>("h0d"), bits) @[Conditional.scala 37:30]
                              when _T_12 : @[Conditional.scala 39:67]
                                mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 107:28]
                                mask_mem[1] <= UInt<1>("h00") @[Exercise1_Lab8.scala 108:28]
                                mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 109:28]
                                mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 110:28]
                                write mport MPORT_12 = mem[io.addr], clock
                                MPORT_12[0] <= mask_mem[0]
                                MPORT_12[1] <= mask_mem[1]
                                MPORT_12[2] <= mask_mem[2]
                                MPORT_12[3] <= mask_mem[3]
                                skip @[Conditional.scala 39:67]
                              else : @[Conditional.scala 39:67]
                                node _T_13 = eq(UInt<4>("h0e"), bits) @[Conditional.scala 37:30]
                                when _T_13 : @[Conditional.scala 39:67]
                                  mask_mem[0] <= UInt<1>("h00") @[Exercise1_Lab8.scala 114:28]
                                  mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 115:28]
                                  mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 116:28]
                                  mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 117:28]
                                  write mport MPORT_13 = mem[io.addr], clock
                                  MPORT_13[0] <= mask_mem[0]
                                  MPORT_13[1] <= mask_mem[1]
                                  MPORT_13[2] <= mask_mem[2]
                                  MPORT_13[3] <= mask_mem[3]
                                  skip @[Conditional.scala 39:67]
                                else : @[Conditional.scala 39:67]
                                  node _T_14 = eq(UInt<4>("h0f"), bits) @[Conditional.scala 37:30]
                                  when _T_14 : @[Conditional.scala 39:67]
                                    mask_mem[0] <= io.dataIn[0] @[Exercise1_Lab8.scala 121:28]
                                    mask_mem[1] <= io.dataIn[1] @[Exercise1_Lab8.scala 122:28]
                                    mask_mem[2] <= io.dataIn[2] @[Exercise1_Lab8.scala 123:28]
                                    mask_mem[3] <= io.dataIn[3] @[Exercise1_Lab8.scala 124:28]
                                    write mport MPORT_14 = mem[io.addr], clock
                                    MPORT_14[0] <= mask_mem[0]
                                    MPORT_14[1] <= mask_mem[1]
                                    MPORT_14[2] <= mask_mem[2]
                                    MPORT_14[3] <= mask_mem[3]
                                    skip @[Conditional.scala 39:67]
      skip @[Exercise1_Lab8.scala 20:19]
    wire _WIRE : UInt @[Exercise1_Lab8.scala 130:25]
    _WIRE is invalid @[Exercise1_Lab8.scala 130:25]
    when io.enable : @[Exercise1_Lab8.scala 130:25]
      _WIRE <= io.addr @[Exercise1_Lab8.scala 130:25]
      node _T_15 = or(_WIRE, UInt<10>("h00")) @[Exercise1_Lab8.scala 130:25]
      node _T_16 = bits(_T_15, 9, 0) @[Exercise1_Lab8.scala 130:25]
      read mport MPORT_15 = mem[_T_16], clock @[Exercise1_Lab8.scala 130:25]
      skip @[Exercise1_Lab8.scala 130:25]
    io.dataOut[0] <= MPORT_15[0] @[Exercise1_Lab8.scala 130:15]
    io.dataOut[1] <= MPORT_15[1] @[Exercise1_Lab8.scala 130:15]
    io.dataOut[2] <= MPORT_15[2] @[Exercise1_Lab8.scala 130:15]
    io.dataOut[3] <= MPORT_15[3] @[Exercise1_Lab8.scala 130:15]
    
