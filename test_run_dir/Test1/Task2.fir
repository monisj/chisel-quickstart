;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Task2 : 
  module Task2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {result : UInt<1>}
    
    reg counter1 : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Task2.scala 10:29]
    reg counter1_count_result : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Task2.scala 11:36]
    node _counter1_T = eq(counter1, UInt<4>("h08")) @[Task2.scala 12:22]
    when _counter1_T : @[Task2.scala 12:39]
      io.result <= UInt<1>("h01") @[Task2.scala 13:23]
      node _counter1_T_1 = eq(counter1_count_result, counter1) @[Task2.scala 14:32]
      when _counter1_T_1 : @[Task2.scala 14:42]
        node _counter1_count_result_T = sub(counter1_count_result, UInt<1>("h01")) @[Task2.scala 15:45]
        node _counter1_count_result_T_1 = tail(_counter1_count_result_T, 1) @[Task2.scala 15:45]
        counter1_count_result <= _counter1_count_result_T_1 @[Task2.scala 15:30]
        skip @[Task2.scala 14:42]
      else : @[Task2.scala 16:45]
        node _counter1_T_2 = eq(counter1_count_result, UInt<1>("h00")) @[Task2.scala 16:37]
        when _counter1_T_2 : @[Task2.scala 16:45]
          io.result <= UInt<1>("h01") @[Task2.scala 17:26]
          counter1 <= UInt<1>("h00") @[Task2.scala 18:23]
          skip @[Task2.scala 16:45]
        else : @[Task2.scala 19:24]
          node _counter1_count_result_T_2 = sub(counter1_count_result, UInt<1>("h01")) @[Task2.scala 20:45]
          node _counter1_count_result_T_3 = tail(_counter1_count_result_T_2, 1) @[Task2.scala 20:45]
          counter1_count_result <= _counter1_count_result_T_3 @[Task2.scala 20:30]
          io.result <= UInt<1>("h00") @[Task2.scala 21:26]
          skip @[Task2.scala 19:24]
      skip @[Task2.scala 12:39]
    else : @[Task2.scala 25:36]
      node _counter1_T_3 = eq(counter1, UInt<1>("h00")) @[Task2.scala 25:28]
      when _counter1_T_3 : @[Task2.scala 25:36]
        node _counter1_count_T = add(counter1, UInt<1>("h01")) @[Task2.scala 26:28]
        node _counter1_count_T_1 = tail(_counter1_count_T, 1) @[Task2.scala 26:28]
        counter1 <= _counter1_count_T_1 @[Task2.scala 26:19]
        node _counter1_count_result_T_4 = add(counter1, UInt<1>("h01")) @[Task2.scala 27:34]
        node _counter1_count_result_T_5 = tail(_counter1_count_result_T_4, 1) @[Task2.scala 27:34]
        counter1_count_result <= _counter1_count_result_T_5 @[Task2.scala 27:26]
        io.result <= UInt<1>("h01") @[Task2.scala 28:23]
        skip @[Task2.scala 25:36]
      else : @[Task2.scala 29:21]
        node _counter1_count_T_2 = add(counter1, UInt<1>("h01")) @[Task2.scala 30:28]
        node _counter1_count_T_3 = tail(_counter1_count_T_2, 1) @[Task2.scala 30:28]
        counter1 <= _counter1_count_T_3 @[Task2.scala 30:19]
        node _counter1_count_result_T_6 = add(counter1, UInt<1>("h01")) @[Task2.scala 31:34]
        node _counter1_count_result_T_7 = tail(_counter1_count_result_T_6, 1) @[Task2.scala 31:34]
        counter1_count_result <= _counter1_count_result_T_7 @[Task2.scala 31:26]
        io.result <= UInt<1>("h00") @[Task2.scala 32:23]
        skip @[Task2.scala 29:21]
    
